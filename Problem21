/*
Amicable numbers
Problem 21
Let d(n) be defined as the sum of proper divisors of n (numbers less than n which divide evenly into n).
If d(a) = b and d(b) = a, where a â‰  b, then a and b are an amicable pair and each of a and b are called amicable numbers.

For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore d(220) = 284. The proper divisors of 284 are 1, 2, 4, 71 and 142; so d(284) = 220.

Evaluate the sum of all the amicable numbers under 10000.
*/

import java.lang.Math;
import java.util.ArrayList;
import java.util.Collections;

public class Problem21 {
public static void main (String[] args) {

  ArrayList<Integer> num1Factors, num2Factors;
  ArrayList<Integer> amicableNumbers = new ArrayList<Integer>();
  int sum1, sum2;

  for (int i = 1; i<=10000; i++) {
    num1Factors = getFactors(i);
    num1Factors.remove((Integer)i);
    sum1 = sumArrayList(num1Factors);
    num2Factors = getFactors(sum1);
    num2Factors.remove((Integer)sum1);
    sum2 = sumArrayList(num2Factors);
    if (i == sum2 && i != sum1) {
      amicableNumbers.add(i);
    }
  }
  Collections.sort(amicableNumbers);
  System.out.println(amicableNumbers);
  System.out.println(sumArrayList(amicableNumbers));
}


public static int sumArrayList(ArrayList<Integer> al) {

  int sum = 0;

  for (Integer i : al) {
    sum += i;
  }
  return sum;
}


public static ArrayList<Integer> getFactors(int a) {

  int upperlimit = (int)(Math.sqrt(a));
  ArrayList<Integer> factors = new ArrayList<Integer>();
  for(int i = 1; i <= upperlimit; i++){
    if (a % i == 0) {
      factors.add(i);
      if (i != a/i){
        factors.add(a/i);
      }
    }
  }
  Collections.sort(factors);
  if (factors.isEmpty()) {
    factors.add(a);
  }
  return factors;
}
}